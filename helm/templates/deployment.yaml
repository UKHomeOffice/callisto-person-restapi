---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
  {{- if ne .Values.environment "prod" }}
  annotations:
    downscaler/uptime: Mon-Fri 08:00-20:00 Europe/London
  {{ end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
      containers:
        - name: person-restapi
          image: {{ .Values.image.repo }}callisto-person-restapi:{{ .Values.image.tag }}
          imagePullPolicy: Always
          resources:
            requests:
              memory: '512Mi'
              cpu: '500m'
            limits:
              memory: '1Gi'
              cpu: '1500m'
          ports:
            - name: http
              containerPort: 9090
          volumeMounts:
            - name: keystore-volume
              mountPath: /person-restapi-keystore
          env: {{ toYaml .Values.env.database | nindent 12 }}
      initContainers:
        - name: person-schema-creation
          image: postgres:alpine
          env: {{ toYaml .Values.env.database | nindent 12 }}
          command:
            - "sh"
            - "-c"
            - "psql postgresql://$(DATABASE_USERNAME):$(DATABASE_PASSWORD)@$(DATABASE_ENDPOINT)/$(DATABASE_NAME) -c 'CREATE SCHEMA IF NOT EXISTS person;'"
        - name: person-database-migrations
          image: {{ .Values.image.repo }}callisto-person-database:{{ .Values.image.tag }}
          imagePullPolicy: Always
          env: {{ toYaml .Values.env.database | nindent 12 }}
          args:
            - "--url=jdbc:postgresql://$(DATABASE_ENDPOINT):$(DATABASE_PORT)/$(DATABASE_NAME)"
            - "--username=$(DATABASE_USERNAME)"
            - "--password=$(DATABASE_PASSWORD)"
            - "--changeLogFile=changelog/db.changelog-main.yml"
            - "--liquibaseSchemaName=person"
            - "update"
        - name: person-create-keystore
          image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/callisto/awscli-java-openssl:latest
          imagePullPolicy: Always
          env: {{ toYaml .Values.env.kafka | nindent 12 }}
          command: [ "/bin/sh" ]
          args: [ "/scripts/create-keystore.sh", "person-restapi", "/person-restapi-keystore" ,"$(AWS_CERTIFICATE_AUTHORITY_ARN)", "$(BOOTSTRAP_SERVER)", "$(PERSON_KEYSTORE_PASSWORD)", "$(AWS_ACCESS_KEY)", "$(AWS_SECRET_KEY)" ]
          volumeMounts:
            - name: person-restapi-script-volume
              mountPath: /scripts/create-keystore.sh
              subPath: create-keystore.sh
            - name: keystore-volume
              mountPath: /person-restapi-keystore
        - name: person-set-up-topic
          image: postgres:alpine
          imagePullPolicy: Always
          env: {{ toYaml .Values.env.kafka | nindent 12 }}
          command: [ "/bin/bash" ]
          args: [ "/scripts/set-up-topic.sh", "$(BOOTSTRAP_SERVER)", "$(PERSON_KEYSTORE_PASSWORD)", "$(PERSON_TOPIC)", "person-properties" ]
          volumeMounts:
            - name: person-restapi-script-volume
              mountPath: /scripts
            - name: keystore-volume
              mountPath: /person-restapi-keystore
      volumes:
        - name: person-restapi-script-volume
          configMap:
            name: {{ .Release.Name }}-scripts
        - name: keystore-volume
          emptyDir: { }